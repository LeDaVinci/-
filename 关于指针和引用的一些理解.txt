参考博客：http://blog.csdn.net/shiyuqing1207/article/details/45937447

int a = 2;
int* p = &a;
int &q = a;
这里呢，其实 &q = &a = *p;
q其实就是a，而 p其实是a的地址；所以对q的操作就是在内存中就是对a的操作，而对p的操作其实是对a的地址的操作
个人理解，*其实是一种运算符，根据地址去求值的运算符，而int* p = &a;
实质上是是将a的地址赋给了p；然后根据*p就可以去求出这个地址所对应的值，所以这个p本身的内容就是a的地址，而p也拥有自己的地址，所以对*p自加也就是相应的a的值也会自加，而对p自加其实是将p自己的内容自加了，也就是将存储的地址加1了，*p所求出来的就是另一个地址的值，并不会改变a的值。
个人理解2：其实每一个变量所对应的都是有自己的地址和值也就是reference和value，而像a啊这些什么的知识我们程序员给这个东西取的名字，再说一下&，这其实是一个求址运算符，求出该变量对应的地址